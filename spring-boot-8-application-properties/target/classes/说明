配置文件application.properties中的自定义属性的加载与注入

1、自定义属性可以通过@Value("${属性名}")方式注入到相应的属性中
	如：
		@Value
		private String name;

2、配置文件中参数间的引用
	可以直接调用"${属性名}"来赋值
	
3、随机数的使用
	配置文件中可以直接使用${random}来生成随机数。
	如：
		com.didispace.blog.value=${random.value}：随机字符串
		com.didispace.blog.number=${random.int}：随机int
		com.didispace.blog.bignumber=${random.long}：随机long
		com.didispace.blog.test1=${random.int(10)}：10以内的随机数
		com.didispace.blog.test2=${random.int[10,20]}：10-20的随机数
		
4、通过命令行设置属性
	如：java -jar xxx.jar --server.port=8888
	其中
		"--"表示对application.properties中的属性值进行赋值的标识。
			上面的命令等价于在application.properties中添加server.port=8888
	注意：在application.properties配置文件中添加SpringApplication.setAddCommandLineProperties(false)
			可以关闭命令行中的这种功能
			
5、多环境配置
	适用场景：开发、测试、生产多环境下简化配置
	使用：
		(1)在application.properties配置文件中添加"spring.profiles.ative"属性。当然，这个属性也可以写在命令行中，即"java xxx.jar --spring.profiles.active=test"
			相应的就会去加载application-{profile}.properties配置文件