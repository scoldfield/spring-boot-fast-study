AOP的使用

1、与spring中的AOP使用完全相同

2、关键注解
	使用@Aspect注解将一个java类定义为切面类
	使用@Pointcut定义一个切入点，可以是一个规则表达式，比如下例中某个package下的所有函数，也可以是一个注解等。
	根据需要在切入点不同位置的切入内容
	使用@Before在切入点开始处切入内容
	使用@After在切入点结尾处切入内容
	使用@AfterReturning在切入点return内容之后切入内容（可以用来对处理返回值做一些加工处理）
	使用@Around在切入点前后切入内容，并自己控制何时执行切入点自身的内容
	使用@AfterThrowing用来处理当切入内容部分抛出异常之后的处理逻辑

3、使用AOP来计算程序运行时间
	在doBefore处记录时间，并在doAfterReturning处通过当前时间与开始处记录的时间计算得到请求处理的消耗时间。
	但这会有同步问题。
	所以，引入ThreadLocal对象
	
4、AOP的优先级
	当有多个AOP时，可以通过@Order(num)注解来设定该切面类的优先级