<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
    PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<!-- 指定properties配置文件， 我这里面配置的是数据库相关 -->
	<!-- <properties resource="dbConfig.properties"></properties> -->

	<!-- 指定Mybatis使用log4j -->
	<settings>
		<setting name="logImpl" value="LOG4J" />
	</settings>

	<!-- <properties> <property name="driver" value="com.mysql.jdbc.Driver" 
		/> <property name="url" value="jdbc:mysql://localhost:3306/test1" /> <property 
		name="username" value="root" /> <property name="password" value="root" /> 
		</properties> -->

	<!-- mybatis插件配置 -->
	<!-- plugins在配置文件中的位置必须符合要求，否则会报错，顺序如下: properties?, settings?, typeAliases?, typeHandlers?, objectFactory?,objectWrapperFactory?, plugins?, environments?, databaseIdProvider?, mappers? -->
	<plugins>
		<!-- mybatis-cache-enhanced-plugin -->
		<plugin interceptor="org.luanlouis.mybatis.plugin.cache.EnhancedCachingExecutor">
			<property name="dependency" value="dependencys.xml" />
			<property name="cacheEnabled" value="true" />
		</plugin>

		<!-- mybatis分页插件配置
			  注意：com.github.pagehelper为PageHelper类所在包名
	    -->
		<plugin interceptor="com.github.pagehelper.PageHelper">
			<!-- 4.0.0以后版本可以不设置该参数 -->
			<property name="dialect" value="mysql" />
			<!-- 该参数默认为false -->
			<!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
			<!-- 和startPage中的pageNum效果一样 -->
			<property name="offsetAsPageNum" value="true" />
			<!-- 该参数默认为false -->
			<!-- 设置为true时，使用RowBounds分页会进行count查询 -->
			<property name="rowBoundsWithCount" value="true" />
			<!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
			<!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型） -->
			<property name="pageSizeZero" value="true" />
			<!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
			<!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
			<!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
			<property name="reasonable" value="false" />
			<!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 -->
			<!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 -->
			<!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,orderBy,不配置映射的用默认值 -->
			<!-- 不理解该含义的前提下，不要随便复制该配置 -->
			<property name="params" value="pageNum=pageHelperStart;pageSize=pageHelperRows;" />
			<!-- 支持通过Mapper接口参数来传递分页参数 -->
			<property name="supportMethodsArguments" value="false" />
			<!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page -->
			<property name="returnPageInfo" value="none" />
		</plugin>
	</plugins>

	<environments default="development">
		<environment id="development">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<!-- 如果上面没有指定数据库配置的properties文件，那么此处可以这样直接配置 -->

				<property name="driver" value="com.mysql.jdbc.Driver" />
				<property name="url" value="jdbc:mysql://localhost:3306/test1" />
				<property name="username" value="root" />
				<property name="password" value="root" />


				<!-- 上面指定了数据库配置文件， 配置文件里面也是对应的这四个属性 -->
				<!-- <property name="driver" value="${driver}" /> <property name="url" 
					value="${url}" /> <property name="username" value="${username}" /> <property 
					name="password" value="${password}" /> -->
			</dataSource>
		</environment>
	</environments>

	<!-- 映射文件，mybatis精髓， 后面才会细讲 -->
	<mappers>
		<!-- <mapper>中有两个属性： (1)"resource"属性表示从classpath下相应的包中导入文件，并转换成对象写到Configuration对象中 
			(2)"url"属性表示从对应的url中导入相应文件，并转换成对象写到Configuration对象中 -->
		<mapper resource="com/cmcc/mapper/userDao-mapping.xml" />

		<mapper resource="com/cmcc/mapper/courseDao-mapping.xml" />

		<mapper resource="com/cmcc/mapper/studentDao-mapping.xml" />
	</mappers>

</configuration>